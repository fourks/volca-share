/*
 * decaffeinate suggestions:
 * DS102: Remove unnecessary code created because of implicit returns
 * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md
 */
VS.Knob = function(element) {
  const scope = this;
  this.element = element;
  this.midi = $(this.element).data('midi');
  this.rotation = $(this.element).data('rotation') || 0;
  this.displayStyle = 'midiString';
  this.inputElement = $(`input#patch_${$(this.element).attr('id')}`);

  const setDisplayStyle = function() {
    if ($(scope.element).attr('id').split('_')[1] === 'pitch') {
      return scope.displayStyle = 'pitchString';
    } else if ($(scope.element).attr('id') === 'octave') {
      return scope.displayStyle = 'octaveString';
    }
  };

  setDisplayStyle();

  this.rotate = function(degree) {
    const knob = $(this.element);
    knob.css('-moz-transform', `rotate(${degree}deg)`);
    knob.css('-moz-transform-origin', '50% 50%');
    knob.css('-webkit-transform', `rotate(${degree}deg)`);
    knob.css('-webkit-transform-origin', '50% 50%');
    knob.css('-o-transform', `rotate(${degree}deg)`);
    knob.css('-o-transform-origin', '50% 50%');
    knob.css('-ms-transform', `rotate(${degree}deg)`);
    knob.css('-ms-transform-origin', '50% 50%');
  };

  this.degreeForMidi = (midi, limit) => Math.round((midi - 63.5) / (63.5 / limit));

  this.autoRotate = function(d) {
    <% if Rails.env.test? %>
    $(scope.element).css({transform: `rotate(${d}deg)`});
    <% else %>
    const currentRotation = parseInt(this.rotation);
    $({deg: currentRotation}).animate({ deg: d }, { step(now, fx) {
      $(scope.element).css({transform: `rotate(${now}deg)`});
    }
  }
    );
    <% end %>
  };
};
